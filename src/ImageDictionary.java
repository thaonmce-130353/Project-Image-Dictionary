
import DBLib.ConnectionLib;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Acer
 */
public final class ImageDictionary extends javax.swing.JFrame {

    static Statement st;
    static PreparedStatement pst;
    static WordModel wm;
    static MeaningModel mm;
    private boolean Check;
    private String wTextTmp;
    private long TypeIdTmp;
    private boolean checkWordUpdate;
    private int RowId;

    /**
     * Creates new form ShowDictionary
     *
     * @throws WordException
     * @throws MeaningException
     */
    public ImageDictionary() throws WordException, MeaningException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().
                getResource("/image_background/PictureDictionary_icon.jpg")));
        this.getContentPane().setBackground(new Color(204, 204, 204));
        Check = false;
        checkWordUpdate = false;
        wm = new WordModel();
        mm = new MeaningModel();
        mm.SelectMeaning();
        UpdateTable();
        try {
            Connection con = ConnectionLib.getConnection();
            st = con.createStatement();
            con.close();
        } catch (SQLException ex) {
            System.out.println("SQLException!");
            Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * update table
     *
     * @throws WordException
     * @throws MeaningException
     */
    public void UpdateTable() throws WordException, MeaningException {
        DefaultTableModel model = (DefaultTableModel) tblShowTable.getModel();
        Object rowData[] = new Object[100];
        JTableHeader a = tblShowTable.getTableHeader();
        a.setFont(new Font("Tahoma", Font.BOLD, 20));
        ((DefaultTableCellRenderer) a.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
        wm = new WordModel();
        mm = new MeaningModel();
        ArrayList<Word> list = wm.SelectWord();
        mm.SelectMeaning();
        wm.removeTable(model);
        lblNumberOfWord.setText(">-----------------(" + list.size() + " words)----------------->");
        for (int i = 0; i < list.size(); i++) {
            rowData[0] = i + 1;
            rowData[1] = list.get(i).getwText();
            long wId = list.get(i).getWid();
            rowData[2] = mm.getMeanings(wId);
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlinsert = new javax.swing.JDialog();
        lblinsertText = new javax.swing.JLabel();
        lbltext1 = new javax.swing.JLabel();
        txtAddWordText = new javax.swing.JTextField();
        lbltext2 = new javax.swing.JLabel();
        txtAddImage = new javax.swing.JTextField();
        btnChooseImage = new javax.swing.JButton();
        lblText3 = new javax.swing.JLabel();
        txtAddVoice = new javax.swing.JTextField();
        btnChooseVoice = new javax.swing.JButton();
        lblText4 = new javax.swing.JLabel();
        txtAddPro = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        lblTextTypeAdd = new javax.swing.JLabel();
        lblTextMeaningAdd = new javax.swing.JLabel();
        txtSetMeanWord = new javax.swing.JTextField();
        cbbSetTypeWord = new javax.swing.JComboBox<>();
        lblInsertbackground = new javax.swing.JLabel();
        FlCChooseImage = new javax.swing.JFileChooser();
        dlUpdate = new javax.swing.JDialog();
        lblUpdateText = new javax.swing.JLabel();
        lbltext3 = new javax.swing.JLabel();
        txtUpdateWordText = new javax.swing.JTextField();
        lbltext4 = new javax.swing.JLabel();
        txtUpdateImage = new javax.swing.JTextField();
        btnChooseImageUpdate = new javax.swing.JButton();
        lblText5 = new javax.swing.JLabel();
        txtUpdateVoice = new javax.swing.JTextField();
        btnChooseVoiceUpdate = new javax.swing.JButton();
        lblText7 = new javax.swing.JLabel();
        txtUpdatePro = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblTextTypew = new javax.swing.JLabel();
        lblText8 = new javax.swing.JLabel();
        txtUpdateMeanWord = new javax.swing.JTextField();
        cbbUpdateTypeWord = new javax.swing.JComboBox<>();
        lblInsertbackground1 = new javax.swing.JLabel();
        dlAbout = new javax.swing.JDialog();
        lblTextTitile = new javax.swing.JLabel();
        lbltextabout = new javax.swing.JLabel();
        lbltextabout2 = new javax.swing.JLabel();
        lblTextAbout3 = new javax.swing.JLabel();
        lblTextAbout4 = new javax.swing.JLabel();
        lblTextAbout5 = new javax.swing.JLabel();
        lblAbouBackground = new javax.swing.JLabel();
        dlHelp = new javax.swing.JDialog();
        lblTextHelp12 = new javax.swing.JLabel();
        lblTextHelp5 = new javax.swing.JLabel();
        lblHelpUpdate = new javax.swing.JLabel();
        btnOKSearchHelp = new javax.swing.JButton();
        lbltextHelp13 = new javax.swing.JLabel();
        lbltextHelp6 = new javax.swing.JLabel();
        lbltextHelp14 = new javax.swing.JLabel();
        lbltextHelp4 = new javax.swing.JLabel();
        btnHelpUpdate = new javax.swing.JButton();
        lblHelpAdd = new javax.swing.JLabel();
        lbltextHelp16 = new javax.swing.JLabel();
        lblTextHelp7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lbltextHelp9 = new javax.swing.JLabel();
        lbltextHelp1 = new javax.swing.JLabel();
        btnHelpAdd = new javax.swing.JButton();
        lbltextHelp2 = new javax.swing.JLabel();
        lblTextHelp11 = new javax.swing.JLabel();
        lblTextHelp3 = new javax.swing.JLabel();
        lblTextHelp10 = new javax.swing.JLabel();
        lblHelp_Search = new javax.swing.JLabel();
        lblNumberOfWord = new javax.swing.JLabel();
        lblTextShow = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        tblShowTable = new javax.swing.JTable();
        lblText = new javax.swing.JLabel();
        txtInputWordSearch = new javax.swing.JTextField();
        btnOKSearch = new javax.swing.JButton();
        lblShowBackground = new javax.swing.JLabel();
        lblImageResultSearch = new javax.swing.JLabel();
        lblSoundWord = new javax.swing.JLabel();
        lblSetTextWord = new javax.swing.JLabel();
        lblSetVnmsWord = new javax.swing.JLabel();
        lblShowWordBackground = new javax.swing.JLabel();
        pnlTHMgroup = new javax.swing.JPanel();
        lblTextGroup = new javax.swing.JLabel();
        lblBackgroupOrange = new javax.swing.JLabel();
        mnbApp = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        mniInsert = new javax.swing.JMenuItem();
        mniUpdate = new javax.swing.JMenuItem();
        mniExit = new javax.swing.JMenuItem();
        mnHelp = new javax.swing.JMenu();
        mniAbout = new javax.swing.JMenuItem();
        mniHelp = new javax.swing.JMenuItem();

        dlinsert.setResizable(false);
        dlinsert.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblinsertText.setFont(new java.awt.Font("Algerian", 2, 34)); // NOI18N
        lblinsertText.setText("Add new word");
        dlinsert.getContentPane().add(lblinsertText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        lbltext1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbltext1.setText("Word Text:");
        dlinsert.getContentPane().add(lbltext1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 40));

        txtAddWordText.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlinsert.getContentPane().add(txtAddWordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 310, 40));

        lbltext2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbltext2.setText("Image:");
        dlinsert.getContentPane().add(lbltext2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        txtAddImage.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        dlinsert.getContentPane().add(txtAddImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 260, 40));

        btnChooseImage.setBackground(new java.awt.Color(255, 255, 255));
        btnChooseImage.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        btnChooseImage.setText("...");
        btnChooseImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChooseImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });
        dlinsert.getContentPane().add(btnChooseImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 40, 40));

        lblText3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblText3.setText("Voice:");
        dlinsert.getContentPane().add(lblText3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        txtAddVoice.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlinsert.getContentPane().add(txtAddVoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 260, 40));

        btnChooseVoice.setBackground(new java.awt.Color(255, 255, 255));
        btnChooseVoice.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        btnChooseVoice.setText("...");
        btnChooseVoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseVoiceActionPerformed(evt);
            }
        });
        dlinsert.getContentPane().add(btnChooseVoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 40, 40));

        lblText4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblText4.setText("Pronounce:");
        dlinsert.getContentPane().add(lblText4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        txtAddPro.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlinsert.getContentPane().add(txtAddPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 310, 40));

        btnAdd.setBackground(new java.awt.Color(0, 204, 51));
        btnAdd.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        dlinsert.getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 90, 50));

        lblTextTypeAdd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTextTypeAdd.setText("Type Word:");
        dlinsert.getContentPane().add(lblTextTypeAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 40));

        lblTextMeaningAdd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTextMeaningAdd.setText("Meaning:");
        dlinsert.getContentPane().add(lblTextMeaningAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtSetMeanWord.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlinsert.getContentPane().add(txtSetMeanWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 184, 310, 40));

        cbbSetTypeWord.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cbbSetTypeWord.setMaximumRowCount(10);
        cbbSetTypeWord.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. conjunction", "2. interjection", "3. noun", "4. participle", "5. phrase", "6. preposition", "7. pronoun", "8. verb", "9. verb - intransitive verb", "10. verb - transitive verb" }));
        cbbSetTypeWord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dlinsert.getContentPane().add(cbbSetTypeWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 310, 40));

        lblInsertbackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/search_bacground.jpg"))); // NOI18N
        dlinsert.getContentPane().add(lblInsertbackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 490));

        dlUpdate.setResizable(false);
        dlUpdate.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUpdateText.setFont(new java.awt.Font("Algerian", 2, 34)); // NOI18N
        lblUpdateText.setText("Update Word");
        dlUpdate.getContentPane().add(lblUpdateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, -1));

        lbltext3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbltext3.setText("Word Text:");
        dlUpdate.getContentPane().add(lbltext3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 40));

        txtUpdateWordText.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlUpdate.getContentPane().add(txtUpdateWordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 310, 40));

        lbltext4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbltext4.setText("Image:");
        dlUpdate.getContentPane().add(lbltext4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        txtUpdateImage.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N
        dlUpdate.getContentPane().add(txtUpdateImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 260, 40));

        btnChooseImageUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnChooseImageUpdate.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        btnChooseImageUpdate.setText("...");
        btnChooseImageUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnChooseImageUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnChooseImageUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageUpdateActionPerformed(evt);
            }
        });
        dlUpdate.getContentPane().add(btnChooseImageUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 40, 40));

        lblText5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblText5.setText("Voice:");
        dlUpdate.getContentPane().add(lblText5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        txtUpdateVoice.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlUpdate.getContentPane().add(txtUpdateVoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 260, 40));

        btnChooseVoiceUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnChooseVoiceUpdate.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        btnChooseVoiceUpdate.setText("...");
        btnChooseVoiceUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseVoiceUpdateActionPerformed(evt);
            }
        });
        dlUpdate.getContentPane().add(btnChooseVoiceUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 40, 40));

        lblText7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblText7.setText("Pronounce:");
        dlUpdate.getContentPane().add(lblText7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        txtUpdatePro.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlUpdate.getContentPane().add(txtUpdatePro, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 310, 40));

        btnUpdate.setBackground(new java.awt.Color(0, 204, 51));
        btnUpdate.setFont(new java.awt.Font("Algerian", 0, 22)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        dlUpdate.getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 120, 40));

        lblTextTypew.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTextTypew.setText("Type Word:");
        dlUpdate.getContentPane().add(lblTextTypew, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, 40));

        lblText8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblText8.setText("Meaning:");
        dlUpdate.getContentPane().add(lblText8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtUpdateMeanWord.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        dlUpdate.getContentPane().add(txtUpdateMeanWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 184, 310, 40));

        cbbUpdateTypeWord.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cbbUpdateTypeWord.setMaximumRowCount(10);
        cbbUpdateTypeWord.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. conjunction", "2. interjection", "3. noun", "4. participle", "5. phrase", "6. preposition", "7. pronoun", "8. verb", "9. verb - intransitive verb", "10. verb - transitive verb" }));
        cbbUpdateTypeWord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dlUpdate.getContentPane().add(cbbUpdateTypeWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 240, 310, 40));

        lblInsertbackground1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/search_bacground.jpg"))); // NOI18N
        dlUpdate.getContentPane().add(lblInsertbackground1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 490));

        dlAbout.setTitle("ABOUT");
        dlAbout.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTextTitile.setFont(new java.awt.Font("Algerian", 1, 56)); // NOI18N
        lblTextTitile.setForeground(new java.awt.Color(0, 204, 0));
        lblTextTitile.setText("About group");
        dlAbout.getContentPane().add(lblTextTitile, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        lbltextabout.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        lbltextabout.setForeground(new java.awt.Color(255, 255, 0));
        lbltextabout.setText("The software made by");
        dlAbout.getContentPane().add(lbltextabout, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 380, -1));

        lbltextabout2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lbltextabout2.setForeground(new java.awt.Color(255, 255, 0));
        lbltextabout2.setText(" THM Group");
        dlAbout.getContentPane().add(lbltextabout2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, -1, -1));

        lblTextAbout3.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        lblTextAbout3.setForeground(new java.awt.Color(255, 102, 0));
        lblTextAbout3.setText("> Nguyen Minh Thao");
        dlAbout.getContentPane().add(lblTextAbout3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, -1, -1));

        lblTextAbout4.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        lblTextAbout4.setForeground(new java.awt.Color(255, 102, 0));
        lblTextAbout4.setText("> Lam Thi Khanh Hang");
        dlAbout.getContentPane().add(lblTextAbout4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, -1, -1));

        lblTextAbout5.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        lblTextAbout5.setForeground(new java.awt.Color(255, 102, 0));
        lblTextAbout5.setText("> Vo Dang Uyen My");
        dlAbout.getContentPane().add(lblTextAbout5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, -1, -1));

        lblAbouBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/about_background.jpg"))); // NOI18N
        dlAbout.getContentPane().add(lblAbouBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        lblTextHelp12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTextHelp12.setText("Step 2: Go to FILE and select UPDATE WORD");

        lblTextHelp5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTextHelp5.setText("Step 2: Click ");

        lblHelpUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Help_Update.png"))); // NOI18N

        btnOKSearchHelp.setBackground(new java.awt.Color(0, 255, 51));
        btnOKSearchHelp.setFont(new java.awt.Font("Algerian", 1, 26)); // NOI18N
        btnOKSearchHelp.setText("OK");
        btnOKSearchHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnOKSearchHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKSearchHelpActionPerformed(evt);
            }
        });

        lbltextHelp13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbltextHelp13.setText("Step 3: fill in full information");

        lbltextHelp6.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lbltextHelp6.setText("Function 2: Add new word");

        lbltextHelp14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbltextHelp14.setText("Step 4: Click");

        lbltextHelp4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbltextHelp4.setText("Step 1: Go to FILE and select ADD NEW WORD");

        btnHelpUpdate.setBackground(new java.awt.Color(0, 204, 51));
        btnHelpUpdate.setFont(new java.awt.Font("Algerian", 0, 22)); // NOI18N
        btnHelpUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnHelpUpdate.setText("Update");
        btnHelpUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpUpdateActionPerformed(evt);
            }
        });

        lblHelpAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Help_Add.png"))); // NOI18N

        lbltextHelp16.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lbltextHelp16.setText("Note:");

        lblTextHelp7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTextHelp7.setText("Step 2: Fill in full information");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("You can click on the word in the table to see information from there.");

        lbltextHelp9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbltextHelp9.setText("Step 3: Click");

        lbltextHelp1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lbltextHelp1.setText("Function 1: Search word ");

        btnHelpAdd.setBackground(new java.awt.Color(0, 204, 51));
        btnHelpAdd.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        btnHelpAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnHelpAdd.setText("ADD");
        btnHelpAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpAddActionPerformed(evt);
            }
        });

        lbltextHelp2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbltextHelp2.setText("Step 1: Fill in a word you want to search in here");

        lblTextHelp11.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        lblTextHelp11.setText("Function 3: Update word");

        lblTextHelp3.setFont(new java.awt.Font("Algerian", 1, 40)); // NOI18N
        lblTextHelp3.setText("HELP");

        lblTextHelp10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTextHelp10.setText("Step 1: Choose a word in Table");

        lblHelp_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Help_Search.png"))); // NOI18N

        javax.swing.GroupLayout dlHelpLayout = new javax.swing.GroupLayout(dlHelp.getContentPane());
        dlHelp.getContentPane().setLayout(dlHelpLayout);
        dlHelpLayout.setHorizontalGroup(
            dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlHelpLayout.createSequentialGroup()
                .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHelp_Search)
                            .addComponent(lbltextHelp2)
                            .addGroup(dlHelpLayout.createSequentialGroup()
                                .addComponent(lblTextHelp5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnOKSearchHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbltextHelp6))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbltextHelp4)
                            .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, dlHelpLayout.createSequentialGroup()
                                    .addGap(220, 220, 220)
                                    .addComponent(lblTextHelp3))
                                .addGroup(dlHelpLayout.createSequentialGroup()
                                    .addComponent(lblHelpAdd)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblTextHelp7)
                                        .addGroup(dlHelpLayout.createSequentialGroup()
                                            .addComponent(lbltextHelp9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnHelpAdd)))))))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbltextHelp1))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTextHelp11))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTextHelp12)
                            .addComponent(lblTextHelp10)
                            .addGroup(dlHelpLayout.createSequentialGroup()
                                .addComponent(lblHelpUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbltextHelp13)
                                    .addGroup(dlHelpLayout.createSequentialGroup()
                                        .addComponent(lbltextHelp14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnHelpUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbltextHelp16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dlHelpLayout.setVerticalGroup(
            dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlHelpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTextHelp3)
                .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lbltextHelp1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltextHelp2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHelp_Search)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(dlHelpLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(btnOKSearchHelp, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(dlHelpLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTextHelp5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addComponent(lbltextHelp6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltextHelp4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHelpAdd)
                            .addGroup(dlHelpLayout.createSequentialGroup()
                                .addComponent(lblTextHelp7)
                                .addGap(18, 18, 18)
                                .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbltextHelp9)
                                    .addComponent(btnHelpAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(lblTextHelp11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTextHelp10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTextHelp12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHelpUpdate)
                            .addGroup(dlHelpLayout.createSequentialGroup()
                                .addComponent(lbltextHelp13)
                                .addGap(18, 18, 18)
                                .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbltextHelp14)
                                    .addComponent(btnHelpUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(27, 46, Short.MAX_VALUE))
                    .addGroup(dlHelpLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(dlHelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbltextHelp16)
                            .addComponent(jLabel15))
                        .addContainerGap())))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Picture Dictionary");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNumberOfWord.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblNumberOfWord.setForeground(new java.awt.Color(255, 255, 255));
        lblNumberOfWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblNumberOfWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 520, 30));

        lblTextShow.setFont(new java.awt.Font("Algerian", 1, 52)); // NOI18N
        lblTextShow.setForeground(new java.awt.Color(0, 255, 0));
        lblTextShow.setText("Picture DICTIONARY");
        getContentPane().add(lblTextShow, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        tblShowTable.setBackground(new java.awt.Color(153, 255, 153));
        tblShowTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 204, 0)));
        tblShowTable.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        tblShowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Word", "Meaning"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblShowTable.setGridColor(new java.awt.Color(255, 255, 255));
        tblShowTable.setRowHeight(30);
        tblShowTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblShowTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblShowTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblShowTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowTableMouseClicked(evt);
            }
        });
        ScrollPane.setViewportView(tblShowTable);
        if (tblShowTable.getColumnModel().getColumnCount() > 0) {
            tblShowTable.getColumnModel().getColumn(0).setMinWidth(50);
            tblShowTable.getColumnModel().getColumn(0).setMaxWidth(50);
            tblShowTable.getColumnModel().getColumn(1).setMinWidth(180);
            tblShowTable.getColumnModel().getColumn(1).setMaxWidth(180);
        }

        getContentPane().add(ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 510, 580));

        lblText.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        lblText.setForeground(new java.awt.Color(0, 255, 0));
        lblText.setText("Search");
        getContentPane().add(lblText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 118, -1, 50));

        txtInputWordSearch.setFont(new java.awt.Font("Times New Roman", 0, 26)); // NOI18N
        getContentPane().add(txtInputWordSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 270, 40));

        btnOKSearch.setBackground(new java.awt.Color(0, 255, 51));
        btnOKSearch.setFont(new java.awt.Font("Algerian", 1, 26)); // NOI18N
        btnOKSearch.setText("OK");
        btnOKSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOKSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnOKSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 70, 40));

        lblShowBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Show_background.png"))); // NOI18N
        getContentPane().add(lblShowBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 770));

        lblImageResultSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/translate_IMAGE.jpg"))); // NOI18N
        getContentPane().add(lblImageResultSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, -1, -1));

        lblSoundWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Sound_Icon.png"))); // NOI18N
        lblSoundWord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSoundWord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSoundWordMouseClicked(evt);
            }
        });
        getContentPane().add(lblSoundWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 400, -1, -1));

        lblSetTextWord.setFont(new java.awt.Font("Times New Roman", 1, 31)); // NOI18N
        lblSetTextWord.setText("Welcome to my software");
        getContentPane().add(lblSetTextWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 310, -1, -1));

        lblSetVnmsWord.setFont(new java.awt.Font("Times New Roman", 0, 34)); // NOI18N
        lblSetVnmsWord.setText("(^_^(^_^)^_^)");
        getContentPane().add(lblSetVnmsWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, -1, -1));

        lblShowWordBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/search_bacground.jpg"))); // NOI18N
        getContentPane().add(lblShowWordBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, 450, 470));

        pnlTHMgroup.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTHMgroup.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTextGroup.setFont(new java.awt.Font("Tempus Sans ITC", 1, 25)); // NOI18N
        lblTextGroup.setText("The software made by THM Group");
        pnlTHMgroup.add(lblTextGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 400, 40));

        getContentPane().add(pnlTHMgroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 710, 450, 60));

        lblBackgroupOrange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/ImageDictionary.jpg"))); // NOI18N
        getContentPane().add(lblBackgroupOrange, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, -1, 240));

        mnbApp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mnbApp.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N

        mnFile.setForeground(new java.awt.Color(51, 51, 51));
        mnFile.setText("File");
        mnFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnFile.setFont(new java.awt.Font("Algerian", 1, 22)); // NOI18N
        mnFile.setMargin(new java.awt.Insets(0, 0, 0, 5));
        mnFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFileActionPerformed(evt);
            }
        });

        mniInsert.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        mniInsert.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        mniInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/add.png"))); // NOI18N
        mniInsert.setText("ADD NEW WORD");
        mniInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mniInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniInsertActionPerformed(evt);
            }
        });
        mnFile.add(mniInsert);

        mniUpdate.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        mniUpdate.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        mniUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Update_Icon.png"))); // NOI18N
        mniUpdate.setText("Update Word");
        mniUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mniUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUpdateActionPerformed(evt);
            }
        });
        mnFile.add(mniUpdate);

        mniExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mniExit.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        mniExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/Exit_Icon.png"))); // NOI18N
        mniExit.setText("Exit");
        mniExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mnFile.add(mniExit);

        mnbApp.add(mnFile);

        mnHelp.setForeground(new java.awt.Color(51, 51, 51));
        mnHelp.setText("HELP");
        mnHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnHelp.setFont(new java.awt.Font("Algerian", 0, 22)); // NOI18N

        mniAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        mniAbout.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        mniAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/About-icon.png"))); // NOI18N
        mniAbout.setText("About");
        mniAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mniAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAboutActionPerformed(evt);
            }
        });
        mnHelp.add(mniAbout);

        mniHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mniHelp.setFont(new java.awt.Font("Algerian", 0, 20)); // NOI18N
        mniHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image_background/help.png"))); // NOI18N
        mniHelp.setText("User manual");
        mniHelp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mniHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHelpActionPerformed(evt);
            }
        });
        mnHelp.add(mniHelp);

        mnbApp.add(mnHelp);

        setJMenuBar(mnbApp);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblShowTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowTableMouseClicked
        Check = true;
        txtInputWordSearch.setText("");
        int id = tblShowTable.getSelectedRow();
        wm.FindAndShowWord(lblSetTextWord, lblSetVnmsWord, lblImageResultSearch, id);
    }//GEN-LAST:event_tblShowTableMouseClicked

    private void mniInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniInsertActionPerformed
        dlinsert.pack();
        dlinsert.setLocationRelativeTo(null);
        dlinsert.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image_background/add.png")));
        dlinsert.getContentPane().setBackground(new Color(204, 204, 204));
        dlinsert.setTitle("ADD");
        dlinsert.setVisible(true);
    }//GEN-LAST:event_mniInsertActionPerformed

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        int choice = FlCChooseImage.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File wImage = FlCChooseImage.getSelectedFile();
            txtAddImage.setText(wImage + "");
        }
    }//GEN-LAST:event_btnChooseImageActionPerformed

    private void btnChooseVoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseVoiceActionPerformed
        int choice = FlCChooseImage.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File wVoice = FlCChooseImage.getSelectedFile();
            txtAddVoice.setText(wVoice + "");
        }
    }//GEN-LAST:event_btnChooseVoiceActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            if (txtSetMeanWord.getText().equals("") || txtAddWordText.getText().equals("")
                    || txtAddImage.getText().equals("") || txtAddPro.getText().equals("") || txtAddVoice.getText().equals("")) {
                JOptionPane.showMessageDialog(this.dlinsert, "Please fill full the information!", "WARNING", JOptionPane.WARNING_MESSAGE);
            } else {
                if (wm.CheckDuplicate(txtAddWordText.getText()) == -1) {
                    JOptionPane.showMessageDialog(this.dlinsert, "Your word is already exist");
                    wm.ClearInsert(txtAddWordText, txtSetMeanWord, txtAddPro, txtAddVoice, txtAddImage);
                } else {
                    File wImage = new File(txtAddImage.getText());
                    File wVoice = new File(txtAddVoice.getText());
                    if (!(wImage.isFile() || wVoice.isFile())) {
                        JOptionPane.showMessageDialog(this.dlinsert, "That's not the path lead to the file"
                                + "\nSomething wrong with your path!!!", "Not Found Path", JOptionPane.WARNING_MESSAGE);
                    } else {
                        String pathWImage = "C:\\Users\\Acer\\Documents\\NetBeansProjects\\Assignment02_PRJ311\\src\\image_Word\\" + txtAddWordText.getText();
                        String pathWVoice = "C:\\Users\\Acer\\Documents\\NetBeansProjects\\Assignment02_PRJ311\\src\\Voice\\" + txtAddWordText.getText();
                        int Type = cbbSetTypeWord.getSelectedIndex() + 1;
                        wm.MoveAndRenameFile(wImage, pathWImage);
                        wm.MoveAndRenameFile(wVoice, pathWVoice);
                        String wText = txtAddWordText.getText().toLowerCase();
                        wm.InsertWord(wm.UpperCaseFirst(wText), wText + ".jpg", wText + ".mp3", txtAddPro.getText());
                        mm.InsertMeaning(Type, wm.SelectWord().get(wm.getSize() - 1).getWid(), txtSetMeanWord.getText());
                        JOptionPane.showMessageDialog(this.dlinsert, "Add Successfull!");
                        wm.ClearInsert(txtAddWordText, txtSetMeanWord, txtAddPro, txtAddVoice, txtAddImage);
                        UpdateTable();
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnOKSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKSearchActionPerformed
        try {
            wm.SelectWord();
            mm.SelectMeaning();
            if (txtInputWordSearch.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Please enter word for search", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                long wid = wm.search(txtInputWordSearch.getText());
                if (wid == -1) {
                    JOptionPane.showMessageDialog(this, "Your's word is not found", "Not Found", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    tblShowTable.setRowSelectionInterval(0, wm.findWord(wid));
                    wm.setImage(lblImageResultSearch, txtInputWordSearch.getText());
                    lblSetTextWord.setText(wm.getWord(wid).getwText() + " /" + wm.getWord(wid).getwPronounce() + "/");
                    lblSetVnmsWord.setText(mm.getMeanings(wid));
                }
            }
        } catch (WordException | MeaningException ex) {
            System.out.println(ex.getMessage());
            Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOKSearchActionPerformed

    private void lblSoundWordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSoundWordMouseClicked
        if ((txtInputWordSearch.getText().equals("") || wm.search(txtInputWordSearch.getText()) == -1) && Check == false) {
            JOptionPane.showMessageDialog(this, "Don't have any sound!", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                if (Check == true) {
                    wm.PlayMp3(lblSetTextWord.getText().split(" ")[0].toLowerCase());
                } else {
                    wm.PlayMp3(txtInputWordSearch.getText().toLowerCase());
                }
            } catch (IOException ex) {
                Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lblSoundWordMouseClicked

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mnFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnFileActionPerformed

    private void mniUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUpdateActionPerformed
        if (Check == false) {
            JOptionPane.showMessageDialog(this, "Please choose a word for update");
        } else {
            dlUpdate.pack();
            dlUpdate.setLocationRelativeTo(null);
            dlUpdate.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image_background/Update_Icon.png")));
            dlUpdate.getContentPane().setBackground(new Color(204, 204, 204));
            dlUpdate.setTitle("UPDATE");
            dlUpdate.setVisible(true);
            long id = tblShowTable.getSelectedRow();
            RowId = (int) id;
            try {
                wTextTmp = wm.FindAndShowWord(txtUpdateWordText, txtUpdateMeanWord, cbbUpdateTypeWord, txtUpdateImage, txtUpdateVoice, txtUpdatePro, id);
            } catch (TypeException ex) {
                Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_mniUpdateActionPerformed

    private void btnChooseImageUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageUpdateActionPerformed
        int choice = FlCChooseImage.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File wImage = FlCChooseImage.getSelectedFile();
            txtUpdateImage.setText(wImage + "");
        }
    }//GEN-LAST:event_btnChooseImageUpdateActionPerformed

    private void btnChooseVoiceUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseVoiceUpdateActionPerformed
        int choice = FlCChooseImage.showSaveDialog(this);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File wVoice = FlCChooseImage.getSelectedFile();
            txtUpdateVoice.setText(wVoice + "");
        }
    }//GEN-LAST:event_btnChooseVoiceUpdateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            if (txtUpdateWordText.getText().equals("") || txtUpdateMeanWord.getText().equals("")
                    || txtUpdateImage.getText().equals("") || txtUpdatePro.getText().equals("") || txtUpdateVoice.getText().equals("")) {
                JOptionPane.showMessageDialog(this.dlinsert, "Please fill full the information!", "WARNING", JOptionPane.WARNING_MESSAGE);
            } else {
                File wImage = new File(txtUpdateImage.getText());
                File wVoice = new File(txtUpdateVoice.getText());
                if (!(wImage.isFile() || wVoice.isFile())) {
                    JOptionPane.showMessageDialog(this.dlinsert, "That's not the path lead to the file"
                            + "\nSomething wrong with your path!!!", "Not Found Path", JOptionPane.WARNING_MESSAGE);
                } else {
                    if (wTextTmp.equalsIgnoreCase(txtUpdateWordText.getText())) {
                        checkWordUpdate = true;
                    } else if (wm.CheckDuplicate(txtUpdateWordText.getText()) == -1) {
                        checkWordUpdate = false;
                    } else {
                        checkWordUpdate = true;
                    }
                    if (checkWordUpdate == false) {
                        JOptionPane.showMessageDialog(this.dlUpdate, "Your word is already exist");
                    } else {
                        String pathWImage = "C:\\Users\\Acer\\Documents\\NetBeansProjects\\Assignment02_PRJ311\\src\\image_Word\\" + txtUpdateWordText.getText();
                        String pathWVoice = "C:\\Users\\Acer\\Documents\\NetBeansProjects\\Assignment02_PRJ311\\src\\Voice\\" + txtUpdateWordText.getText();
                        int Type = cbbUpdateTypeWord.getSelectedIndex() + 1;
                        long wid = wm.search(wTextTmp);
                        String wText = txtUpdateWordText.getText().toLowerCase();
                        wm.deleteFile(txtUpdateImage.getText(), wTextTmp.toLowerCase());
                        wm.deleteFile(txtUpdateVoice.getText(), wTextTmp.toLowerCase());
                        wm.MoveAndRenameFile(wImage, pathWImage);
                        wm.MoveAndRenameFile(wVoice, pathWVoice);
                        wm.UpdateWord(wid, wm.UpperCaseFirst(wText), wText + ".jpg", wText + ".mp3", txtUpdatePro.getText());
                        mm.UpdateMeaning(Type, wm.search(wTextTmp), txtUpdateMeanWord.getText());
                        JOptionPane.showMessageDialog(this.dlUpdate, "Update Successful!");
                        dlUpdate.setVisible(false);
                        UpdateTable();
//                        wm.setImage(lblImageResultSearch, txtUpdateWordText.getText());
//                        lblSetTextWord.setText(wm.UpperCaseFirst(wText) + " /" + txtUpdatePro.getText() + "/");
//                        lblSetVnmsWord.setText(txtUpdateMeanWord.getText());
//                        tblShowTable.setRowSelectionInterval(0, RowId);
                    }
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void mniAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAboutActionPerformed
        dlAbout.pack();
        dlAbout.setLocationRelativeTo(null);
        dlAbout.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image_background/About-icon.png")));
        dlAbout.getContentPane().setBackground(new Color(204, 204, 204));
        dlAbout.setTitle("ABOUT");
        dlAbout.setVisible(true);
    }//GEN-LAST:event_mniAboutActionPerformed

    private void mniHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHelpActionPerformed
        dlHelp.pack();
        dlHelp.setLocationRelativeTo(null);
        dlHelp.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image_background/help.png")));
        dlHelp.getContentPane().setBackground(new Color(204, 204, 204));
        dlHelp.setTitle("HELP");
        dlHelp.setVisible(true);
    }//GEN-LAST:event_mniHelpActionPerformed

    private void btnOKSearchHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKSearchHelpActionPerformed

    }//GEN-LAST:event_btnOKSearchHelpActionPerformed

    private void btnHelpUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpUpdateActionPerformed

    }//GEN-LAST:event_btnHelpUpdateActionPerformed

    private void btnHelpAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpAddActionPerformed

    }//GEN-LAST:event_btnHelpAddActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageDictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new ImageDictionary().setVisible(true);
                } catch (WordException | MeaningException ex) {
                    Logger.getLogger(ImageDictionary.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FlCChooseImage;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnChooseImageUpdate;
    private javax.swing.JButton btnChooseVoice;
    private javax.swing.JButton btnChooseVoiceUpdate;
    private javax.swing.JButton btnHelpAdd;
    private javax.swing.JButton btnHelpUpdate;
    private javax.swing.JButton btnOKSearch;
    private javax.swing.JButton btnOKSearchHelp;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbbSetTypeWord;
    private javax.swing.JComboBox<String> cbbUpdateTypeWord;
    private javax.swing.JDialog dlAbout;
    private javax.swing.JDialog dlHelp;
    private javax.swing.JDialog dlUpdate;
    private javax.swing.JDialog dlinsert;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel lblAbouBackground;
    private javax.swing.JLabel lblBackgroupOrange;
    private javax.swing.JLabel lblHelpAdd;
    private javax.swing.JLabel lblHelpUpdate;
    private javax.swing.JLabel lblHelp_Search;
    private javax.swing.JLabel lblImageResultSearch;
    private javax.swing.JLabel lblInsertbackground;
    private javax.swing.JLabel lblInsertbackground1;
    private javax.swing.JLabel lblNumberOfWord;
    private javax.swing.JLabel lblSetTextWord;
    private javax.swing.JLabel lblSetVnmsWord;
    private javax.swing.JLabel lblShowBackground;
    private javax.swing.JLabel lblShowWordBackground;
    private javax.swing.JLabel lblSoundWord;
    private javax.swing.JLabel lblText;
    private javax.swing.JLabel lblText3;
    private javax.swing.JLabel lblText4;
    private javax.swing.JLabel lblText5;
    private javax.swing.JLabel lblText7;
    private javax.swing.JLabel lblText8;
    private javax.swing.JLabel lblTextAbout3;
    private javax.swing.JLabel lblTextAbout4;
    private javax.swing.JLabel lblTextAbout5;
    private javax.swing.JLabel lblTextGroup;
    private javax.swing.JLabel lblTextHelp10;
    private javax.swing.JLabel lblTextHelp11;
    private javax.swing.JLabel lblTextHelp12;
    private javax.swing.JLabel lblTextHelp3;
    private javax.swing.JLabel lblTextHelp5;
    private javax.swing.JLabel lblTextHelp7;
    private javax.swing.JLabel lblTextMeaningAdd;
    private javax.swing.JLabel lblTextShow;
    private javax.swing.JLabel lblTextTitile;
    private javax.swing.JLabel lblTextTypeAdd;
    private javax.swing.JLabel lblTextTypew;
    private javax.swing.JLabel lblUpdateText;
    private javax.swing.JLabel lblinsertText;
    private javax.swing.JLabel lbltext1;
    private javax.swing.JLabel lbltext2;
    private javax.swing.JLabel lbltext3;
    private javax.swing.JLabel lbltext4;
    private javax.swing.JLabel lbltextHelp1;
    private javax.swing.JLabel lbltextHelp13;
    private javax.swing.JLabel lbltextHelp14;
    private javax.swing.JLabel lbltextHelp16;
    private javax.swing.JLabel lbltextHelp2;
    private javax.swing.JLabel lbltextHelp4;
    private javax.swing.JLabel lbltextHelp6;
    private javax.swing.JLabel lbltextHelp9;
    private javax.swing.JLabel lbltextabout;
    private javax.swing.JLabel lbltextabout2;
    private javax.swing.JMenu mnFile;
    private javax.swing.JMenu mnHelp;
    private javax.swing.JMenuBar mnbApp;
    private javax.swing.JMenuItem mniAbout;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniHelp;
    private javax.swing.JMenuItem mniInsert;
    private javax.swing.JMenuItem mniUpdate;
    private javax.swing.JPanel pnlTHMgroup;
    private javax.swing.JTable tblShowTable;
    private javax.swing.JTextField txtAddImage;
    private javax.swing.JTextField txtAddPro;
    private javax.swing.JTextField txtAddVoice;
    private javax.swing.JTextField txtAddWordText;
    private javax.swing.JTextField txtInputWordSearch;
    private javax.swing.JTextField txtSetMeanWord;
    private javax.swing.JTextField txtUpdateImage;
    private javax.swing.JTextField txtUpdateMeanWord;
    private javax.swing.JTextField txtUpdatePro;
    private javax.swing.JTextField txtUpdateVoice;
    private javax.swing.JTextField txtUpdateWordText;
    // End of variables declaration//GEN-END:variables
}
